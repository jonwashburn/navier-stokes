#!/usr/bin/env python3
"""Test o3 on a single sorry to see exactly what it generates"""

import sys
import os
from pathlib import Path
from openai import OpenAI

def test_single_sorry(api_key):
    client = OpenAI(api_key=api_key)
    
    # Pick a simple sorry from SimplifiedProofs.lean
    file_path = Path("../NavierStokesLedger/SimplifiedProofs.lean")
    
    # Read the file
    with open(file_path, 'r') as f:
        content = f.read()
    
    # Extract the first theorem with a sorry
    lines = content.split('\n')
    
    # Find L2_norm_mono theorem around line 20-35
    theorem_start = None
    sorry_line = None
    
    for i, line in enumerate(lines):
        if 'theorem L2_norm_mono' in line:
            theorem_start = i
        if theorem_start is not None and 'sorry' in line:
            sorry_line = i
            break
    
    if theorem_start is None or sorry_line is None:
        print("Could not find L2_norm_mono theorem")
        return
        
    # Extract the theorem
    theorem_lines = lines[theorem_start:sorry_line+1]
    theorem_text = '\n'.join(theorem_lines)
    
    print("=== TARGET THEOREM ===")
    print(theorem_text)
    print("\n=== ASKING O3 ===")
    
    # Create a focused prompt
    prompt = f"""You are an expert Lean 4 theorem prover.

Here is a theorem that needs to be proved:

```lean
{theorem_text}
```

The context:
- This is about L2 norms of vector fields
- We have: Integrable (fun x => ‖u x‖^2) volume3 and Integrable (fun x => ‖v x‖^2) volume3
- We need to show: L2Norm u ≤ L2Norm v

Key definitions you should know:
- L2Norm u = sqrt (L2NormSquared u)
- L2NormSquared is the integral of ‖u x‖^2 over ℝ³

Replace the 'sorry' with a complete proof. Output ONLY the Lean proof code starting with 'by'."""

    try:
        response = client.chat.completions.create(
            model="o3",
            messages=[
                {"role": "system", "content": "You are a Lean 4 expert. Output only valid Lean code."},
                {"role": "user", "content": prompt}
            ],
            max_completion_tokens=3000  # O3 needs more tokens for reasoning
        )
        
        proof = response.choices[0].message.content.strip()
        
        print("\n=== O3 RESPONSE DETAILS ===")
        print(f"Content: '{response.choices[0].message.content}'")
        print(f"Finish reason: {response.choices[0].finish_reason}")
        print(f"Usage: {response.usage}")
        
        print("\n=== O3 GENERATED PROOF ===")
        print(proof)
        
        # Save the proof to a file
        with open('o3_generated_proof.lean', 'w') as f:
            f.write(f"-- Generated by o3 for L2_norm_mono\n{proof}")
            
        print("\n=== SAVED TO o3_generated_proof.lean ===")
        
        # Also show what the complete theorem would look like
        print("\n=== COMPLETE THEOREM WITH PROOF ===")
        complete = theorem_text.replace('sorry', proof)
        print(complete)
        
    except Exception as e:
        print(f"\nError: {e}")
        print(f"Error type: {type(e).__name__}")

if __name__ == "__main__":
    if len(sys.argv) > 1:
        api_key = sys.argv[1]
    else:
        print("Please provide API key as argument")
        sys.exit(1)
        
    test_single_sorry(api_key) 